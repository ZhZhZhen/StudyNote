1、水平居中：
文本/行内元素/表格单元格的元素：text-align: center;
绝对定位中：
	margin: 0 auto;
	在left偏移50%的情况下，使用margin设置负值/trasform: translateX(-50%)或直接使用left: calc((100% - 自身width) / 2)
flex布局：设置justify-content: center

2、垂直居中
文本/行内元素/表格单元格的元素：vertical-align: middle;
文本：line-height与height使用相同值
绝对定位中：
	margin: auto 0;
	在top偏移50%的情况下，使用margin设置负值/trasform: translateY(-50%)或直接使用top: calc((100% - 自身height) / 2)
flex布局：设置align-items: center

3、隐藏元素
透明度设置：opacity: 0;  不改变布局，依然可以触发点击
visibility: hidden; 不改变布局，不可点击
display: none; 改变布局

4、css实现三角符号
通过边框对一个尺寸为0的元素进行设置，三面透明，一面填色
div:after{
    width: 0px;
    height: 0px;
    content: " ";
    border-right: 100px solid transparent;
    border-top: 100px solid red;
    border-left: 100px solid transparent;
    border-bottom: 100px solid transparent;
}

通过45deg线性渐变，绘制三角形背景，再通过rotate进行旋转
div{
	width: 100px;
        height: 100px;
	background: linear-gradient(45deg, red, red 50%, transparent 50%, transparent 100%);
}

通过clippath裁剪出三角形，再通过rotate进行旋转
div{
        width: 100px;
        height: 100px;
        background: red;
        clip-path: polygon(0 0, 0 100%, 100% 100%);
}

5、清除浮动
使用clear: both：通过css属性clear: both来清除一个元素之上的浮动，可以添加独立空元素/使用伪元素::after来使用该属性。
创建块级格式上下文：如设置display: flow-root将一个元素变为块级格式化上下文，格式上下文在计算尺寸时包含内部元素，并且会排除外部元素。
设置高度