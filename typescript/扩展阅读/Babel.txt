1、编译过程
#Babel编译流程：1、把源码转为ast；2、遍历ast，生成作用域信息，并通过各种插件对ast进行转化；3、把转化后的ast打印成目标代码并生成sourcemap
#tsc编译过程：1、把源码转为ast；2、遍历ast，生成作用域信息，并进行类型推导和检查；3、对ast进行转换；4、打印ast成目标代码，生成sourcemap和类型声明文件(根据配置)
*ast即抽象语法树

Babel之所以无法进行类型检查，是因为其编译过程针对单个文件，所以没法拿到整个工程的类型信息。这导致常量枚举和跨文件namespace在Babel中是不支持的，同时一些typescript的特殊语法也不支持(export=/import require)

2、Babel优点
#1、产物体积更小：支持配置浏览器版本，能够更精准的按需编译和polyfill(创建对等语义但兼容低版本浏览器的代码)
#2、编译速度快：因为做不了类型检查
#3、支持更多语音特性：可以支持草案阶段的特性(tsc不支持草案阶段特性)

3、Babel与tsc结合使用
使用tsc -noEmit命令通过tsc来帮助进行类型检查而不输出结果。
使用Babel来进行编译
