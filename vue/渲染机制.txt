Vue，React采取的都是虚拟DOM的形式，意为将目标所需UI通过数据结构保存在内存中，然后将真实的DOM与之保持同步。

1、Vue组件挂载时发生的事
编译：Vue模板编译为渲染函数（用来返回虚拟DOM树的函数）。这一步既可以通过构建步骤提前完成，也可以使用运行时编译器即时完成。
挂载：运行时渲染器调用渲染函数，遍历返回虚拟DOM树，并创建真实的DOM。这一步会作为响应式副作用执行，因此会追踪其中的响应式依赖。
更新：依赖发生变化时，副作用重新运行，这样会创建一棵更新后的虚拟DOM树。渲染器比较两棵新旧虚拟DOM树，并找出它们的区别，变更到真实的DOM上。


2、模板与渲染函数
Vue模板会被预编译为渲染函数，此外我们也可以通过VueAPI直接编写渲染函数（一般用于有复杂动态逻辑时）。
使用模板编写更贴近HTML，易于重用HTML代码片段和更易理解；并且容易做静态分析，使Vue模板编译器能够应用编译时优化提升虚拟DOM的性能表现。

带编译信息的虚拟DOM：Vue在模板编译为渲染函数时，做了静态分析，并在生成的代码中留下了标记，这些标记使得运行时尽可能地走捷径。
*传统的虚拟DOM通常会遍历整棵树来比较区别；并且某个节点的部分子树虽然从未改变，但也依然在每次重渲染时创建新的虚拟节点，带来了内存压力。

Vue的编译时优化：
#1、静态提升：对于静态元素（不带动态绑定），没有必要在重新渲染中再次创建和比较。Vue编译器会提升这部分vnode创建函数到渲染函数之外，并在每次渲染时使用相同的vnode；对于连续的静态元素，会被压缩为一个vnode，其子元素会以HTML字符串的形式通过innerHTML来挂载，挂载后的这部分DOM也会被缓存并通过cloneNode()来进行复用。
#2、更新类型标记：vnode的创建函数中有一个参数可以用于标记元素的更新类型。这是一个number值，并通过位来记录多个更新类型标记，在编译时通过对模板的推断所得。如具有单个动态绑定的元素/子节点顺序固定的元素都会有相应的标记。运行时渲染器会根据标记来确定相应的更新操作，从而执行最少的操作。
#3、树结构打平：渲染函数中createElementBlock用于创建一个区块，内部结构稳定的部分可以称为区块（结构性指令（如v-if/v-for）会生成新的块)，每个块都会追踪其带有更新类型标记的后代节点（不只是直接子节点），并打平为一个包含所有动态后代节点的数组。每当组件需要重新渲染时只需要遍历打平的树，略过了模板中的静态部分。一个子区块也同样会被记录在父区块的动态子节点数组中。
*说明
#1、上述中提到的vnode创建函数，即createElementVNode之类的创建虚拟节点的函数。
#2、对于SSR：对于单个元素的激活可以根据更新类型标记走更快的捷径；整体来说，激活只需要遍历区块节点和其动态子节点，可以更高效的部分激活。


3、编写渲染函数
#1、编写：Vue提供了h()函数帮助手动编写渲染函数（h是createVNode的简称），并在组件对象中的setup中返回渲染函数。
h(type, prop?, children?):VNode：type为string和组件标识符；props为元素/组件的属性；children（Children类型）可以是VNode/文本内容/Children类型组成的数组/返回Children的函数
渲染函数：一个无参函数，返回Children类型的值。
setup(props, ctx)：props和ctx都是选项中所配置的内容，手动编写渲染函数时需返回一个渲染函数。渲染函数会被调用多次，setup只会被调用一次，所以避免返回一个值。

#2、函数式组件
如果一个渲染函数组件不需要任何实例状态，则可以直接以返回Children类型的值的函数进行表示，其参数与setup相同（props, ctx）。
函数式组件在渲染过程中不会创建组件实例，也不会触发常规的组件生命周期钩子。
渲染函数可以通过其属性配置渲染，支持props,emits,inheritAttrs(是否默认继承透传)。如MyComponent.props = ['value']。

#3、说明：
##1、渲染函数中的children必须唯一（如不允许children数组不同地方使用了相同值），这种情况可以用返回Children的函数代替。
##2、JSX可以被编译为不同的输出形式，Vue的JSX与React的JSX有使用上的些许不同。如Vue使用class和for（React中为className和htmlFor）；Vue通过对象的属性赋值来使用插槽（React中编写方式类似于普通的HTML元素）
##3、函数式组件中，若没配置props，则传递给其的属性名不会进行驼峰式命名处理，只有class/style/onXXX事件监听会默认透传，props会包含除前述的所有属性；若配置了props，则透传机制与普通组件相同。