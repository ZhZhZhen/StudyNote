1、作为独立脚本
使用petite-vue，渐进式增强已有的HTML

2、作为WebComponent
编写自定义HTML元素，生成的Web Component可以嵌入到旧应用、静态HTML，甚至其他框架构建的应用中。

3、单页面应用（SPA）
用于拥有丰富交互性的前端应用，Vue控制整个页面，并在无需重新加载的前提下处理页面切换。
这是最常用的情况，Vue提供了丰富的支持（路由，构建工具，IDE支持，浏览器开发工具，Typescript支持，测试工具）

4、服务端渲染（SSR）
如果对首屏加载和SEO方面有需求，可以使用服务端渲染首次页面。（SPA对于浏览器来说初始会收到一个空白的HTML）
Vue可以将服务端渲染返回的HTML字符串通过“激活”的方式使其获得可交互性。
一般通过基于Vue的框架来开发比较方便。如：NuxtJs

5、静态站点部署（SSG）
用于页面数据是静态的情况，服务端渲染可以提前完成并作为静态文件部署。这可以获得同SSR一样的优点，并且无需根据请求动态地渲染页面。
Vue可以将HTML通过“激活”的方式使其获得可交互性。
推荐框架：VitePress，NuxtJS

6、其他应用
#1、配合Electron构建桌面应用
#2、配合Ionic Vue构建移动端应用
#3、使用Quasar或Tauri用同一套代码同时开发桌面端和移动端应用
#4、使用TresJS构建3D内容（TresJS基于ThreeJS的Vue支持）
#5、通过Vue的自定义渲染API构建自定义渲染器。如：针对终端命令行