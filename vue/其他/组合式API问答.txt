组合式API是什么：
一系列API的集合，使用函数而不是声明选项的方式编写Vue组件。包括响应式API，生命周期钩子，依赖注入。
组合式API基本在<script setup>中使用，也可以在选项式的setup方法中使用。
组合式API不是函数式编程，主要区别在于：组合式API以Vue中数据可变、细粒度的响应式系统为基础。而函数式编程通常要求数据不可变。

组合式API比过去的优势：
#1、更好的逻辑复用：编写组合函数可以实现简洁高效的逻辑复用。解决了选项式API中mixins模式的缺陷
#2、更灵活的代码组织：选项式API必须需要把逻辑分布在不同的选项中；而组合式API可以自己规划代码（通常是相关功能归在一组），这样便于管理重构，
#3、更好的类型推导：组合式API主要基于变量和函数，本身类型友好。
#4、更小的生成包体积：组合式API所创建的本地变量名可以被压缩；而选项式API通过this上下文对象访问属性，对象的属性不能进行压缩。

与React Hooks对比：
#1、React Hooks在组件每次更新时都会重新调用。而setup/<script setup>仅调用一次。
#2、React Hooks有严格调用顺序，不可以出现在条件/循环分支中。组合式API无调用顺序限制。
#3、React Hooks的一些钩子需要手动维护依赖项。Vue的响应性系统对于计算属性和侦听器会自动收集依赖。
#4、React为了避免频繁更新，有时候需要使用useCallback/useMemo进行手动缓存。Vue无需手动缓存，依赖响应性系统确保大部分情况组件仅执行必要更新。