1、基本判断方式
this在es6之前，属于执行上下文中的属性，在es6及之后被移至词法环境中，全局词法环境和大部分函数词法环境(因为箭头函数除外)包含this指向。
一个方法被调用时，this由引用类型的base值决定。即判断()左边的函数标识符，如果是一个引用类型，那么this指向引用类型的base值；如果不是引用类型，那么this为undefined，之后会根据是否为严格模式进行转化。
*（在一些特殊情况如命名函数表达式的递归调用/es3中函数内的函数调用，引用类型的base会指向活动对象AO/命名函数表达式用于存储函数命名的特殊对象，这时this指向undefined，之后会根据是否为严格模式进行转化）

2、总结
#1、顶层代码的this指向global（因为全局上下文的词法环境中this固定为global）
#2、new调用，this指向新创建的对象
#3、call/apply调用，this取决于第一个参数，之后根据是否为严格模式判断
#4、bind返回的函数：this绑定为第一个参数，之后根据是否为严格模式判断
#5、普通函数调用，this相当于undefined，所以取决于是否为严格模式
#6、对象方法调用，this为调用的对象
#7、箭头函数的this在创建时决定，取向上查找最近包含this的词法环境，以该词法环境this作为自己的this
#8、事件函数中this指向所绑定的element
#9、evalCode的this取决于eval是否被直接调用，eval被直接调用时创建的执行上下文相当于复制所在的上下文，因此this也相同；非直接调用则复制全局上下文（非直接调用指的是将eval复制给一个变量，通过变量进行调用）

3、严格模式this判断
严格模式下，this即所赋的值
非严格模式下，this如果为undefined，则转为global；否则等同于toObject(this)