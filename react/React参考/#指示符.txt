指示符指令只用在React服务器组件中

1、'use client'
使用：在文件的顶部使用'use client'，该文件及其依赖项都会被标记为客户端代码（注意是通过依赖树，不是渲染树的结构）
说明：
	#1、只有客服端模块的代码才会被打包并由客户端解析执行，所以这样做可以减少客户端发送和运行的代码量。而服务端代码会在服务端被解析执行，并输出HTML。
	#2、服务端组件可以访问本地文件系统。客户端组件可以使用事件处理程序，StateHook/EffectHook（因为服务端渲染最终只是输出HTML，无法保存状态），使用了对应环境才能用的API必须标记成对应环境（默认情况为服务端代码，需使用'use client'或被客户端代码依赖）。
	#3、父服务端组件向子客户端组件传递数据，由于它们在不同环境渲染，传递的数据必须可序列化。服务器的模块从'use client'模块导入值时，这些值必须是React组件或可序列化属性。
	#4、若组件没有使用对应的环境API，则不需要使用'use client'，这样既可以成为服务端组件，也可以成为客户端组件。如果被两边都依赖使用，那么其代码会在服务端和客户端都被解析执行。
	#5、如果一个组件在服务端渲染的HTML比本身文件还大，则可以考虑使用'use client'将其作为客户端组件。

2、'use server'
使用：在异步函数的代码顶部使用'use server'，标记可以从客户端调用的服务器函数，这些函数被成为Server Action。（也可以将标记'use server'添加至文件顶部，来标记所有导出内容。）
说明：
	#1、默认情况下函数是不可序列化的，所以在不同环境中传递的函数必须通过'use server'标记为Server Action。
	#2、'use server'只能用于异步函数，因为底层网络调用始终是异步的。并且传递的参数和返回值都必须是可序列化的。
	#3、应该在transition中调用Server Action，在表单中使用会自动将其包裹在transtion中
	#4、Server Action的参数由客户端控制，所以应该始终认为参数是不受信任的，并根据需要进行验证。
